# MIF 2.1
# MIF Example File: FMR-film.mif

RandomSeed 10

set pi [expr {4*atan(1.0)}]
set mu0 [expr {4*$pi*1e-7}]

Parameter relax 0  ;# Should be either 0 or 1

# Saturation magnetization
Parameter Ms 1.056e6   ;# A/m

# Exchange
Parameter A 18e-12 ;# J/m

Parameter gyromagnetic_ratio 186.79e9  ;# rad/(s.T)
set gamma [expr {-1*$mu0*$gyromagnetic_ratio}]
## gamma is approximately -2.211e5 m/AÂ·s

# Thin film geometry (in meters)
Parameter thickness    10e-9    ;# Thin film thickness
Parameter width       300e-9    ;# Thin film width
Parameter length      300e-9    ;# Thin film length

# Simulation cellsize
Parameter xcellsize    5e-9
Parameter ycellsize    5e-9
Parameter zcellsize    1e-9

# Bias field
Parameter H0  [expr 79.5775 * 850]; # A/m
set H0x $H0 ; set H0y 0.0 ; set H0z 0.0

# Damping parameter
Parameter alpha 0.0036

# Excitation field amplitude
Parameter Hamp [expr 79.5775 * 5]; # A/m  ;# Excitation field amplitude, in A/m

# Atlas
Specify Oxs_BoxAtlas:atlas [subst {
   xrange {0 $length}
   yrange {0 $width}
   zrange {0 $thickness}
}]

# Mesh
Specify Oxs_RectangularMesh:mesh [subst {
   cellsize {$xcellsize $ycellsize $zcellsize}
   atlas :atlas
}]

# Exchange
Specify Oxs_UniformExchange [subst {
  A   $A
}]

# Demag
Specify Oxs_Demag {}

# Bias field
Specify Oxs_FixedZeeman:Bias [subst {
   field {$H0x $H0y $H0z}
}]

if {$relax} { # Find equilibrium configuration
    set basename "dispersion-film-relax"
    Specify Oxs_CGEvolve:evolver {}
    Specify Oxs_MinDriver [subst {
        evolver :evolver
        mesh :mesh
        Ms $Ms
        m0 { 1.0 0 0}
        stopping_mxHxm 1e-7
        basename $basename
    }]

    # Output
    Destination archive mmArchive
    Schedule Oxs_MinDriver::Spin archive stage 1

} else {  # Dynamic simulation

    # Time-varying uniform excitation field
    Parameter stage_time   10e-12  ;# Adjusted stage time
    Parameter run_time     3e-9     ;# Run time remains the same
    set number_of_stages [expr {round($run_time/$stage_time)}]

    # Modify the Hmask procedure to apply the field only in the y direction
    proc Hmask {x y z} {
        global Hamp
        return [list 0 $Hamp 0]
    }

    Specify Oxs_ScriptVectorField:Hmask [subst {
        script Hmask
        script_args rawpt
        atlas :atlas
    }]

    # Updated parameters for 100 GHz max excitation
    Parameter toff 0.3e-9 ;# Pulse peak offset, in s (500 ps)
    Parameter fc 50e9    ;# Temporal cutoff frequency, Hz
    set wc [expr {2*$pi*$fc}]

    proc sinc { x } {
        if {abs($x)>0.01} {
            return [expr {sin($x)/$x}]
        } else {
            set xsq [expr {$x*$x}]
            return [expr {($xsq/120. - 1/6.)*$xsq + 1}]
        }
    }

    proc deriv_sinc { x } {
        if {abs($x)>0.01} {
            return [expr {($x*cos($x)-sin($x))/($x*$x)}]
        } else {
            return [expr {(($x*$x/-840. + 1/30.)*$x*$x - 1/3.)*$x}]
        }
    }

    proc Hpulse { t } { ;# Import is total time
        global toff wc
        set wt [expr {$wc*($t-$toff)}]
        set val [sinc $wt]
        set dval [expr {$wc*[deriv_sinc $wt]}]
        return [list 0 $val 0 0 $dval 0]
    }

    Specify Oxs_TransformZeeman [subst {
        field :Hmask
        type diagonal
        script Hpulse
        script_args total_time
    }]

    set min_timestep 1e-15
    Parameter rkmethod rk4 ;# One of rk2, rk4, rkf54, rkf54m, or rkf54s

    Specify Oxs_RungeKuttaEvolve:evolver [subst {
        alpha $alpha
        gamma_G $gamma
        comment {
           # Oxs_RungeKuttaEvolve error control options:
           energy_precision -1
           error_rate 1.0
           absolute_step_error 0.2
           relative_step_error 0.01
           error_rate 10.0
           absolute_step_error 2
           relative_step_error 0.1
           min_timestep $min_timestep
        }
        method $rkmethod
    }]

    # Driver
    set start_m0 "dispersion-film-relax-Oxs_MinDriver-Spin-00-0007469.omf"
    set basename "dispersion-film"
    Specify Oxs_TimeDriver [subst {
        evolver :evolver
        mesh :mesh
        Ms $Ms
        m0 { Oxs_FileVectorField {
           file  [list $start_m0]
           atlas :atlas
           norm  1
        } }
        stopping_time  { { $stage_time $number_of_stages } :expand: }
        basename $basename
    }]

    # Sample Destination and Schedule commands.
    # Modify as desired.
    Destination archive mmArchive
    Schedule DataTable archive stage 1
    Schedule Oxs_TimeDriver::Magnetization archive stage 1
}
